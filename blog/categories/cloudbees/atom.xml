<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Cloudbees | Eddú Meléndez]]></title>
  <link href="http://eddumelendez.github.io/blog/categories/cloudbees/atom.xml" rel="self"/>
  <link href="http://eddumelendez.github.io/"/>
  <updated>2015-05-27T01:16:47-05:00</updated>
  <id>http://eddumelendez.github.io/</id>
  <author>
    <name><![CDATA[Eddú Meléndez]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Jenkins and Liquibase Working Together]]></title>
    <link href="http://eddumelendez.github.io/blog/2014/08/30/jenkins-and-liquibase-working-together/"/>
    <updated>2014-08-30T02:03:53-05:00</updated>
    <id>http://eddumelendez.github.io/blog/2014/08/30/jenkins-and-liquibase-working-together</id>
    <content type="html"><![CDATA[<p>I have talked about <a href="http://eddumelendez.github.io/blog/2014/08/11/database-change-management-liquibase">Database Change Management using Liquibase</a>.
Now, I will talk about the integration with Jenkins CI.</p>

<p>As you can see in the example of my previous post. In the <code>pom.xml</code> there are 3 profiles: <code>update</code>,<code>tag</code> and <code>rollback</code> which will be used by Jenkins.
The profile approach will be useful in our integration.</p>

<p>I am going to use <strong>Cloudbees</strong> (PaaS)</p>

<p><strong>1.</strong> First, you need to have an <a href="http://www.cloudbees.com/">Cloudbees</a> account.</p>

<p><strong>2.</strong> Click on <em>Databases</em> and then click <em>Add Database</em>.</p>

<p><strong>3.</strong> Create a liquibase_demo database.</p>

<p><strong>4.</strong> Click on <em>Builds</em>, Jenkins dashboard will be display.</p>

<p><strong>5.</strong> Create <em>New Job</em>.</p>

<p><strong>6.</strong> Put a name, choose <em>Build a free-style software project</em> option and then click <em>OK</em>.</p>

<p><strong>7.</strong> Now, let start to configure Jenkins&rsquo;s job. You will be able to see the image below
  <img src="https://dl.dropboxusercontent.com/u/15671111/blog/liquibase-jenkins-1.png" alt="" /></p>

<p><strong>8.</strong> Check <em>This build is parameterized</em> option. Then, click <em>Add Parameter</em>. Add the following parameters: <code>driver</code>, <code>url</code>, <code>username</code>, <code>password</code>, <code>changeLogFile</code>, <code>tag</code> and <code>action</code>.</p>

<p>  <code>driver</code>, <code>url</code>, <code>username</code>, <code>changeLogFile</code>, <code>tag</code> are <strong>String Parameter</strong>
  <img src="https://dl.dropboxusercontent.com/u/15671111/blog/liquibase-jenkins-2.png" alt="" /></p>

<p>  <code>password</code> is a <strong>Password Parameter</strong>.
  <img src="https://dl.dropboxusercontent.com/u/15671111/blog/liquibase-jenkins-3.png" alt="" /></p>

<p>  <code>action</code> is a <strong>Choice Parameter</strong> with the following options: <code>update</code>, <code>tag</code> and <code>rollback</code>
  <img src="https://dl.dropboxusercontent.com/u/15671111/blog/liquibase-jenkins-4.png" alt="" /></p>

<p><strong>9.</strong> Now, lets configure the Source Code Management. In this example, I have published the <a href="https://github.com/eddumelendez/liquibase-demo">demo</a> in GitHub.
  <img src="https://dl.dropboxusercontent.com/u/15671111/blog/liquibase-jenkins-5.png" alt="" /></p>

<p><strong>10.</strong> Now, go to <strong>Build</strong> section, click on <em>Add build step</em> and choose <em>Invoke top-level Maven targets</em>. Add the maven&rsquo;s goal and properties. Then, <em>Save</em>.</p>

<p>Maven Goal:</p>

<pre><code>mvn install -P$action
</code></pre>

<p>Maven Properties:</p>

<pre><code>liquibase.driver=$driver
liquibase.username=$username
liquibase.password=$password
liquibase.url=$url
liquibase.changeLogFile=$changeLogFile
liquibase.rollbackTag=$tag
liquibase.tag=$tag
liquibase.promptOnNonLocalDatabase=false
</code></pre>

<p>  If you remember, we have created parameters at the beginning of this post which are reusing in this part using <code>$</code> in order to do a dynamic job.
  <img src="https://dl.dropboxusercontent.com/u/15671111/blog/liquibase-jenkins-6.png" alt="" /></p>

<p><strong>11.</strong> Finally, click <em>Build with parameters</em>, test your job and enjoy.
  <img src="https://dl.dropboxusercontent.com/u/15671111/blog/liquibase-jenkins-7.png" alt="" /></p>

<p>Avoid risks and say good bye to manual tasks. For that reason, I love automation!</p>

<p><strong>Note:</strong> Liquibase can be used inside the java application using <a href="http://www.liquibase.org/documentation/spring.html">spring integration</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cloudbees]]></title>
    <link href="http://eddumelendez.github.io/blog/2014/04/27/cloudbees/"/>
    <updated>2014-04-27T21:49:32-05:00</updated>
    <id>http://eddumelendez.github.io/blog/2014/04/27/cloudbees</id>
    <content type="html"><![CDATA[<p>Time ago, I was looking for subversion server. I could have used Google code, but I had a problem with that, it is a public repository. So, I found <strong>Cloudbees</strong> and meets my expectation.</p>

<h2>What is Paas?</h2>

<p>Nowadays, we should know about <em>Platform as a Service</em>. But, it doesn&rsquo;t matter if you don&rsquo;t know it. You can learn something new everyday. Briefly, PaaS is a environment on cloud based on products from the providers. So, Cloudbees is a <strong>PaaS</strong>. In this case, Cloudbees was built using Sonar, Jenkins, Subversion, Git, MySQL, Tomcat and many other tools.</p>

<h2>What can you find on Cloudbees?</h2>

<p>You can find several products such as I have mentioned before, besides JFrog, SendGrid, AppDynamics, New Relic, Mongo HQ.</p>

<p>I suggest to use it at university projects. Sometimes we need to application server, and using Cloudbees we can have source control management, database, application server, maven repository. It is a good place to start teaching about <em>Continuous Integration</em>, <em>Continuous Delivery</em>.</p>

<p><strong>Note:</strong> We have to consider that Cloudbees provide a limit space, if you want more space you have to buy.
Cloudbees, is a good service. And I hope you can use it.</p>
]]></content>
  </entry>
  
</feed>
